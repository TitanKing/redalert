[DEFAULT]
; This is the poll rate interval (in seconds) which system will scan
; execute and process. The lower the value the more power it will use.
; WARNING: having this value 0 can use up to 100% core processing power.
poll_rate = 1

; Whether the webserver should be started with the system or not.
; It should be able to do fine without it, you will have to do without a web API though.
web_server = 1
web_server_port = 8000

default_zone_state = 0

; Make different zones, you can create as many zones as you like.
[ZONE_0]
# This will help you identify the zone.
zone_name = Small House Armed
# This is all the input name labels, this is useful for logging and such.
input_name_0 = Unused
input_name_1 = Unused
input_name_2 = Unused
input_name_3 = Unused
input_name_4 = Unused
input_name_5 = Unused
input_name_6 = Unused
input_name_7 = Living Room Area I.R

output_name_0 = Unused
output_name_1 = Unused
output_name_2 = Unused
output_name_3 = Unused
output_name_4 = Unused
output_name_5 = Unused
output_name_6 = Unused
output_name_7 = Alarm Speaker

# Any true from any input below will be listened to and passed to outputs;
input_0 = 0
input_1 = 0
input_2 = 1
input_3 = 0
input_4 = 0
input_5 = 0
input_6 = 0
input_7 = 1

# You can simulate more inputs by pairing them, the system will then listen
# a push combination from both first.
# eg. if input_0_1 = 1, it will trigger when both pins 0 and 1 is true.
input_0_1 = 1
input_0_2 = 0
input_0_3 = 0
input_0_4 = 0
input_0_5 = 0
input_0_6 = 0
input_0_7 = 0

# Pin 1 and other
input_1_2 = 0
input_1_3 = 0
input_1_4 = 0
input_1_5 = 0
input_1_6 = 0
input_1_7 = 0

# Pin 2 and other
input_2_3 = 0
input_2_4 = 0
input_2_5 = 0
input_2_6 = 0
input_2_7 = 0

# Pin 3 and other
input_3_4 = 0
input_3_5 = 0
input_3_6 = 0
input_3_7 = 0

# Pin 4 and other
input_4_5 = 0
input_4_6 = 0
input_4_7 = 0

# Pin 5 and other
input_5_6 = 0
input_5_7 = 0

# Pin 6 and other
input_6_7 = 0

# If any of the above are triggered, output to which pins;
output_0 = 1
output_1 = 0
output_2 = 0
output_3 = 0
output_4 = 0
output_5 = 0
output_6 = 0
output_7 = 0

# Depending on the output triggered, for how long (seconds) should the
# matching trigger be kept on;
timeout_output_0 = 10
timeout_output_1 = 0
timeout_output_2 = 0
timeout_output_3 = 0
timeout_output_4 = 0
timeout_output_5 = 0
timeout_output_6 = 0
timeout_output_7 = 0

# Or which input can disarm the outputs above?
input_can_reset_0 = 1
input_can_reset_1 = 0
input_can_reset_2 = 0
input_can_reset_3 = 0
input_can_reset_4 = 0
input_can_reset_5 = 0
input_can_reset_6 = 0
input_can_reset_7 = 0

[ZONE_1]
# This will help you identify the zone.
zone_name = Small House Armed
# This is all the input name labels, this is useful for logging and such.
input_name_0 = Unused
input_name_1 = Unused
input_name_2 = Unused
input_name_3 = Unused
input_name_4 = Unused
input_name_5 = Unused
input_name_6 = Unused
input_name_7 = Living Room Area I.R

output_name_0 = Unused
output_name_1 = Unused
output_name_2 = Unused
output_name_3 = Unused
output_name_4 = Unused
output_name_5 = Unused
output_name_6 = Unused
output_name_7 = Alarm Speaker

# Any true from any input below will be listened to and passed to outputs;
input_0 = 0
input_1 = 0
input_2 = 1
input_3 = 0
input_4 = 0
input_5 = 0
input_6 = 0
input_7 = 1

# You can simulate more inputs by pairing them, the system will then listen
# a push combination from both first.
# eg. if input_0_1 = 1, it will trigger when both pins 0 and 1 is true.
input_0_1 = 1
input_0_2 = 0
input_0_3 = 0
input_0_4 = 0
input_0_5 = 0
input_0_6 = 0
input_0_7 = 0

# Pin 1 and other
input_1_2 = 0
input_1_3 = 0
input_1_4 = 0
input_1_5 = 0
input_1_6 = 0
input_1_7 = 0

# Pin 2 and other
input_2_3 = 0
input_2_4 = 0
input_2_5 = 0
input_2_6 = 0
input_2_7 = 0

# Pin 3 and other
input_3_4 = 0
input_3_5 = 0
input_3_6 = 0
input_3_7 = 0

# Pin 4 and other
input_4_5 = 0
input_4_6 = 0
input_4_7 = 0

# Pin 5 and other
input_5_6 = 0
input_5_7 = 0

# Pin 6 and other
input_6_7 = 0

# If any of the above are triggered, output to which pins;
output_0 = 1
output_1 = 0
output_2 = 0
output_3 = 0
output_4 = 0
output_5 = 0
output_6 = 0
output_7 = 0

# Depending on the output triggered, for how long (seconds) should the
# matching trigger be kept on;
timeout_output_0 = 10
timeout_output_1 = 0
timeout_output_2 = 0
timeout_output_3 = 0
timeout_output_4 = 0
timeout_output_5 = 0
timeout_output_6 = 0
timeout_output_7 = 0

# Or which input can disarm the outputs above?
input_can_reset_0 = 1
input_can_reset_1 = 0
input_can_reset_2 = 0
input_can_reset_3 = 0
input_can_reset_4 = 0
input_can_reset_5 = 0
input_can_reset_6 = 0
input_can_reset_7 = 0
